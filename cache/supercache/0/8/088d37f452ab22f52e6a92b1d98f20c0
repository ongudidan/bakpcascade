!???!???!!???!???!SGVscCB3aXRoIHdyaXRpbmcgYSBwZXJzdWFzaXZlIHNwZWVjaCAtIE9yIGEgc3BlZWNoIG1ha2VyIHNob3dzIHlvdSBhY2hpZXZlIHlvdXIuLiBSZWZlcmVuY2UgbGV0dGVyIHVuaXZlcnNpdHkgYXBwbGljYXRpb24gdWsu!???!???!aGVscCB3aXRoIHdyaXRpbmcgYSBwZXJzdWFzaXZlIHNwZWVjaCwgQ3VzdG9tIFdyaXR0ZW4gRXNzYXlzIGZvciBTYWxlIHwgRXhwZXJ0IEVzc2F5IFdyaXRlcnMgLSBGYXN0IE9ubGluZSBIZWxw!???!???!aGVscCB3aXRoIHdyaXRpbmcgYSBwZXJzdWFzaXZlIHNwZWVjaCwgc2VhdHRsZSBjYXNlIHN0dWR5IHdyaXRlciwgc2FtcGxlIHNjaG9sYXJzaGlwIGVzc2F5IGdvYWxzLCBlc3NheSByZXZpc2lvbiB0aXBzLCBpbmNlcHRpb24gc2NvcmUgd3JpdGVy!???!???!aHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvZXNzYXktY29udGVzdC1kZWNlbWJlci0yMDEyLmh0bWwhKyFFc3NheSBjb250ZXN0IGRlY2VtYmVyIDIwMTIhPyFodHRwOi8vY2FzY2FkZXN3aWZ0Lm5ldC9jYXNlLWNvbnRyb2wtc3R1ZHktYWR2YW50YWdlcy1kaXNhZHZhbnRhZ2VzLmh0bWwhKyFDYXNlIGNvbnRyb2wgc3R1ZHkgYWR2YW50YWdlcyBkaXNhZHZhbnRhZ2VzIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvZ2NzZS1hcnQtY291cnNld29yay10aXRsZXMuaHRtbCErIUdjc2UgYXJ0IGNvdXJzZXdvcmsgdGl0bGVzIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvaGVscC13aXRoLWVzc2F5LXF1ZXN0aW9ucy5odG1sISshSGVscCB3aXRoIGVzc2F5IHF1ZXN0aW9ucyE/IWh0dHA6Ly9jYXNjYWRlc3dpZnQubmV0L3NhbXBsZS1zY2hvbGFyc2hpcC1lc3NheS1nb2Fscy5odG1sISshU2FtcGxlIHNjaG9sYXJzaGlwIGVzc2F5IGdvYWxzIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvam9iY2VudHJlLXBsdXMtY3YtdGVtcGxhdGUuaHRtbCErIUpvYmNlbnRyZSBwbHVzIGN2IHRlbXBsYXRlIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvY3JlYXRlLWEtdGhlc2lzLXN0YXRlbWVudC13b3Jrc2hlZXQuaHRtbCErIUNyZWF0ZSBhIHRoZXNpcyBzdGF0ZW1lbnQgd29ya3NoZWV0IT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvd2hpY2gtc2l0ZXMtY2FuLWktcGF5LXRvLWhhdmUtbXktaG9tZXdvcmstZG9uZS5odG1sISshV2hpY2ggc2l0ZXMgY2FuIGkgcGF5IHRvIGhhdmUgbXkgaG9tZXdvcmsgZG9uZSE/IWh0dHA6Ly9jYXNjYWRlc3dpZnQubmV0L2hlbHAtd2l0aC13cml0aW5nLWEtcGVyc3Vhc2l2ZS1zcGVlY2guaHRtbCErIUhlbHAgd2l0aCB3cml0aW5nIGEgcGVyc3Vhc2l2ZSBzcGVlY2ghPyFodHRwOi8vY2FzY2FkZXN3aWZ0Lm5ldC9zYW1wbGUtYXBwbGljYXRpb24tbGV0dGVyLW51cnNlLWVkdWNhdG9yLmh0bWwhKyFTYW1wbGUgYXBwbGljYXRpb24gbGV0dGVyIG51cnNlIGVkdWNhdG9yIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvZXNzYXktYWJvdXQteW91cnNlbGYtaW50cm9kdWN0aW9uLmh0bWwhKyFFc3NheSBhYm91dCB5b3Vyc2VsZiBpbnRyb2R1Y3Rpb24hPyFodHRwOi8vY2FzY2FkZXN3aWZ0Lm5ldC91Y2YtYWRtaXNzaW9ucy1lc3NheS10b3BpYy0yMDEyLmh0bWwhKyFVY2YgYWRtaXNzaW9ucyBlc3NheSB0b3BpYyAyMDEyIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvaGVscC13aXRoLXRoZXNpcy10b3BpYy5odG1sISshSGVscCB3aXRoIHRoZXNpcyB0b3BpYyE/IWh0dHA6Ly9jYXNjYWRlc3dpZnQubmV0L2dhbWUtZGVzaWduLWNhc2Utc3R1ZHkuaHRtbCErIUdhbWUgZGVzaWduIGNhc2Ugc3R1ZHkhPyFodHRwOi8vY2FzY2FkZXN3aWZ0Lm5ldC9lc3NheS1vbi10aW1lLXZhbHVlLmh0bWwhKyFFc3NheSBvbiB0aW1lIHZhbHVlIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvdGhlLXllbGxvdy13YWxscGFwZXItc2hvcnQtc3RvcnktZXNzYXkuaHRtbCErIVRoZSB5ZWxsb3cgd2FsbHBhcGVyIHNob3J0IHN0b3J5IGVzc2F5IT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvcGVyc29uYWwtc3RhdGVtZW50LWV4YW1wbGVzLWZvci11bmRlcmdyYWR1YXRlLmh0bWwhKyFQZXJzb25hbCBzdGF0ZW1lbnQgZXhhbXBsZXMgZm9yIHVuZGVyZ3JhZHVhdGUhPyFodHRwOi8vY2FzY2FkZXN3aWZ0Lm5ldC93cml0ZS1ncm91cC1yZXNlYXJjaC1wYXBlci5odG1sISshV3JpdGUgZ3JvdXAgcmVzZWFyY2ggcGFwZXIhPyFodHRwOi8vY2FzY2FkZXN3aWZ0Lm5ldC9hcHBsaWNhdGlvbi1sZXR0ZXItaW50cm9kdWN0aW9uLmh0bWwhKyFBcHBsaWNhdGlvbiBsZXR0ZXIgaW50cm9kdWN0aW9uIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvcmVzdW1lLWV4YW1wbGVzLWZvci1jb3N0LWFjY291bnRhbnQuaHRtbCErIVJlc3VtZSBleGFtcGxlcyBmb3IgY29zdCBhY2NvdW50YW50IT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvY2FzZS1zdHVkeS1hbmQtcHJlc2VudGF0aW9uLmh0bWwhKyFDYXNlIHN0dWR5IGFuZCBwcmVzZW50YXRpb24hPyFodHRwOi8vY2FzY2FkZXN3aWZ0Lm5ldC9jcml0aWNhbC10aGlua2luZy1hLWNvbmNpc2UtZ3VpZGUtMm5kLWVkaXRpb24uaHRtbCErIUNyaXRpY2FsIHRoaW5raW5nIGEgY29uY2lzZSBndWlkZSAybmQgZWRpdGlvbiE/IWh0dHA6Ly9jYXNjYWRlc3dpZnQubmV0L3NjaWVuY2UtY2FzZS1zdHVkeS1ndWlkYW5jZS5odG1sISshU2NpZW5jZSBjYXNlIHN0dWR5IGd1aWRhbmNlIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvbGl0ZXJhdHVyZS1yZXZpZXctZXhhbXBsZS1xdXQuaHRtbCErIUxpdGVyYXR1cmUgcmV2aWV3IGV4YW1wbGUgcXV0IT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvcGhkLXRoZXNpcy1oZWxwLWluZGlhLmh0bWwhKyFQaGQgdGhlc2lzIGhlbHAgaW5kaWE=
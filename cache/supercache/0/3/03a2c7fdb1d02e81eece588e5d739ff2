!???!???!!???!???!RnJlZSBvbmxpbmUgZXNzYXkgd3JpdGluZyBjb3Vyc2VzIC0gQSBqb3VybmFsLCB0aGF0IHdpbGwgaGVscCBvbmxpbmUgcmVzb3VyY2VzIGluIHN0cnVjdHVyZWQgd3JpdGluZywgb3VyIG9ubGluZSB3cml0aW5nLi4gQ3JlYXRpdmUgd3JpdGluZyB1bml0IGxlc3NvbiBwbGFucy4=!???!???!ZnJlZSBvbmxpbmUgZXNzYXkgd3JpdGluZyBjb3Vyc2VzLCBBICJ0aW55IG1hc3RlciItY2xhc3Mgb24gd3JpdGluZyBwZXJzb25hbCBlc3NheXMgLSBWaXJnaW5pYSBMbG95ZCAtIFRvcCBFc3NheSBXcml0aW5n!???!???!ZnJlZSBvbmxpbmUgZXNzYXkgd3JpdGluZyBjb3Vyc2VzLCBwc3ljaG9sb2d5IHJlbGF0ZWQgcGVyc29uYWwgc3RhdGVtZW50LCByZXNlYXJjaCBwYXBlciB0aGVzaXMgZXhhbXBsZSBzYW1wbGUsIGhlbHAgd2l0aCB0aGVzaXMgdG9waWMsIGV4YW1wbGUgb2YgbGl0ZXJhdHVyZSByZXZpZXcgZXNzYXk=!???!???!aHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvY29tcGFyZS1hbmQtY29udHJhc3QtZXNzYXktaWRlYXMtZm9yLWNvbGxlZ2UuaHRtbCErIUNvbXBhcmUgYW5kIGNvbnRyYXN0IGVzc2F5IGlkZWFzIGZvciBjb2xsZWdlIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvam9iLWFwcGxpY2F0aW9uLWxldHRlci1vci1jb3Zlci1sZXR0ZXIuaHRtbCErIUpvYiBhcHBsaWNhdGlvbiBsZXR0ZXIgb3IgY292ZXIgbGV0dGVyIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvam9iY2VudHJlLXBsdXMtY3YtdGVtcGxhdGUuaHRtbCErIUpvYmNlbnRyZSBwbHVzIGN2IHRlbXBsYXRlIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvcGVyc29uYWwtc3RhdGVtZW50LXByb21wdC1kZW50YWwtc2Nob29sLmh0bWwhKyFQZXJzb25hbCBzdGF0ZW1lbnQgcHJvbXB0IGRlbnRhbCBzY2hvb2whPyFodHRwOi8vY2FzY2FkZXN3aWZ0Lm5ldC9jcmVhdGl2ZS13cml0aW5nLWJsb2ctdGl0bGVzLmh0bWwhKyFDcmVhdGl2ZSB3cml0aW5nIGJsb2cgdGl0bGVzIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvcmVzZWFyY2gtcGFwZXItZXhhbXBsZS1tZXRob2RvbG9neS1zZWN0aW9uLmh0bWwhKyFSZXNlYXJjaCBwYXBlciBleGFtcGxlIG1ldGhvZG9sb2d5IHNlY3Rpb24hPyFodHRwOi8vY2FzY2FkZXN3aWZ0Lm5ldC81LXRvcGljcy1yZXNlYXJjaC1wYXBlci5odG1sISshNSB0b3BpY3MgcmVzZWFyY2ggcGFwZXIhPyFodHRwOi8vY2FzY2FkZXN3aWZ0Lm5ldC9yZXNlYXJjaC1wYXBlci10cmF2ZWxpbmctc2FsZXNtYW4tcHJvYmxlbS5odG1sISshUmVzZWFyY2ggcGFwZXIgdHJhdmVsaW5nIHNhbGVzbWFuIHByb2JsZW0hPyFodHRwOi8vY2FzY2FkZXN3aWZ0Lm5ldC9lc3NheS1hYm91dC15b3Vyc2VsZi1pbnRyb2R1Y3Rpb24uaHRtbCErIUVzc2F5IGFib3V0IHlvdXJzZWxmIGludHJvZHVjdGlvbiE/IWh0dHA6Ly9jYXNjYWRlc3dpZnQubmV0L2NyZWF0aXZlLXdyaXRpbmctdW5pdC1sZXNzb24tcGxhbnMuaHRtbCErIUNyZWF0aXZlIHdyaXRpbmcgdW5pdCBsZXNzb24gcGxhbnMhPyFodHRwOi8vY2FzY2FkZXN3aWZ0Lm5ldC9qb2JjZW50cmUtcGx1cy1jdi10ZW1wbGF0ZS5odG1sISshSm9iY2VudHJlIHBsdXMgY3YgdGVtcGxhdGUhPyFodHRwOi8vY2FzY2FkZXN3aWZ0Lm5ldC9zdW1tYXJ5LW9mLWtpbmctbGVhci1ieS1hY3RzLmh0bWwhKyFTdW1tYXJ5IG9mIGtpbmcgbGVhciBieSBhY3RzIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvY292ZXItbGV0dGVyLWludHJvZHVjdGlvbi1qb2IuaHRtbCErIUNvdmVyIGxldHRlciBpbnRyb2R1Y3Rpb24gam9iIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvY292ZXItbGV0dGVyLWFkZHJlc3MtaW5mby5odG1sISshQ292ZXIgbGV0dGVyIGFkZHJlc3MgaW5mbyE/IWh0dHA6Ly9jYXNjYWRlc3dpZnQubmV0L3Jlc3VtZS1leGFtcGxlcy1mcmVlLW9ubGluZS5odG1sISshUmVzdW1lIGV4YW1wbGVzIGZyZWUgb25saW5lIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvY29sbGVnZS1lc3NheS1hYm91dC1pbmZsdWVudGlhbC1wZW9wbGUuaHRtbCErIUNvbGxlZ2UgZXNzYXkgYWJvdXQgaW5mbHVlbnRpYWwgcGVvcGxlIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvY292ZXItbGV0dGVyLXRlbXBsYXRlLWZvci13b3JkLTIwMDcuaHRtbCErIUNvdmVyIGxldHRlciB0ZW1wbGF0ZSBmb3Igd29yZCAyMDA3IT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvY2FzZS1zdHVkeS1kZXNpZ24tcHB0Lmh0bWwhKyFDYXNlIHN0dWR5IGRlc2lnbiBwcHQhPyFodHRwOi8vY2FzY2FkZXN3aWZ0Lm5ldC9lYXN5YmliLXNpdGVzLmh0bWwhKyFFYXN5YmliIHNpdGVzIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvYXAtYmlvbG9neS1lc3NheS1zY29yaW5nLXJ1YnJpY3MuaHRtbCErIUFwIGJpb2xvZ3kgZXNzYXkgc2NvcmluZyBydWJyaWNzIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvY292ZXItbGV0dGVyLWFkZHJlc3MtaW5mby5odG1sISshQ292ZXIgbGV0dGVyIGFkZHJlc3MgaW5mbyE/IWh0dHA6Ly9jYXNjYWRlc3dpZnQubmV0L3RlYWNoaW5nLWNyaXRpY2FsLXRoaW5raW5nLWluLWVsZW1lbnRhcnktc2Nob29sLmh0bWwhKyFUZWFjaGluZyBjcml0aWNhbCB0aGlua2luZyBpbiBlbGVtZW50YXJ5IHNjaG9vbCE/IWh0dHA6Ly9jYXNjYWRlc3dpZnQubmV0L3BlcnNvbmFsLXN0YXRlbWVudC1jb2xsZWdlLWFwcGxpY2F0aW9uLXRlbXBsYXRlLmh0bWwhKyFQZXJzb25hbCBzdGF0ZW1lbnQgY29sbGVnZSBhcHBsaWNhdGlvbiB0ZW1wbGF0ZSE/IWh0dHA6Ly9jYXNjYWRlc3dpZnQubmV0L2NyZWF0aXZlLXdyaXRpbmctcHJvbXB0cy12b2ljZS5odG1sISshQ3JlYXRpdmUgd3JpdGluZyBwcm9tcHRzIHZvaWNlIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvbWl0LWdyYWR1YXRlLWFkbWlzc2lvbi1lc3NheS5odG1sISshTWl0IGdyYWR1YXRlIGFkbWlzc2lvbiBlc3NheQ==
!???!???!!???!???!Q3JlYXRpdmUgd3JpdGluZyB1bml0IGxlc3NvbiBwbGFucyAtIEEgdGVhY2hpbmcgdW5pdHMgb2YgdGhlIGNyZWF0aXZlIHdyaXRpbmcgYWN0aXZpdGllcyBpbiB0aGUgbGVzc29ucyBkZXNpZ25lZCBhcm91bmQgd3JpdGluZy4uIFN1Y2Nlc3NmdWwgdWMgcGVyc29uYWwgc3RhdGVtZW50IGV4YW1wbGVzLg==!???!???!Y3JlYXRpdmUgd3JpdGluZyB1bml0IGxlc3NvbiBwbGFucywgQnVzaW5lc3MgRXNzYXkgRXhhbXBsZSBEaXNjdXNzaW5nIFN0cmF0ZWdpYyBNYW5hZ2VtZW50IC0gQ3VzdG9tIFdyaXRpbmcgYXQgJDEw!???!???!Y3JlYXRpdmUgd3JpdGluZyB1bml0IGxlc3NvbiBwbGFucywgZXNzYXlzIHlvdXRoIGFuZCBhZ2UsIHNhbXBsZSBzY2hvbGFyc2hpcCBlc3NheSBnb2FscywgY292ZXIgbGV0dGVyIHNhbXBsZSBmb3IgY2FyZWVyIGNoYW5nZSwgZXhhbXBsZXMgb2YgZXNzYXlzIHdyaXR0ZW4gaW4gM3JkIHBlcnNvbg==!???!???!aHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvcGVyc29uYWwtc3RhdGVtZW50LWNvbGxlZ2UtYXBwbGljYXRpb24tdGVtcGxhdGUuaHRtbCErIVBlcnNvbmFsIHN0YXRlbWVudCBjb2xsZWdlIGFwcGxpY2F0aW9uIHRlbXBsYXRlIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvdWYtZXNzYXktaWRlYXMuaHRtbCErIVVmIGVzc2F5IGlkZWFzIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvYmlvbG9neS1jb3Vyc2V3b3JrLWVkZXhjZWwuaHRtbCErIUJpb2xvZ3kgY291cnNld29yayBlZGV4Y2VsIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvZnJlZS1jb3Zlci1sZXR0ZXItdGVtcGxhdGVzLTIwMTIuaHRtbCErIUZyZWUgY292ZXIgbGV0dGVyIHRlbXBsYXRlcyAyMDEyIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvd3JpdGUtZ3JvdXAtcmVzZWFyY2gtcGFwZXIuaHRtbCErIVdyaXRlIGdyb3VwIHJlc2VhcmNoIHBhcGVyIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvaW5jZXB0aW9uLXNjb3JlLXdyaXRlci5odG1sISshSW5jZXB0aW9uIHNjb3JlIHdyaXRlciE/IWh0dHA6Ly9jYXNjYWRlc3dpZnQubmV0L2Vzc2F5LWNvbXBldGl0aW9uLTIwMTMtb2N0b2Jlci5odG1sISshRXNzYXkgY29tcGV0aXRpb24gMjAxMyBvY3RvYmVyIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvYXJ0aWNsZXMtZm9yLWNyaXRpY2FsLXRoaW5raW5nLXNraWxscy5odG1sISshQXJ0aWNsZXMgZm9yIGNyaXRpY2FsIHRoaW5raW5nIHNraWxscyE/IWh0dHA6Ly9jYXNjYWRlc3dpZnQubmV0L2EtcmVzZWFyY2gtcGFwZXItb3V0bGluZS1leGFtcGxlLmh0bWwhKyFBIHJlc2VhcmNoIHBhcGVyIG91dGxpbmUgZXhhbXBsZSE/IWh0dHA6Ly9jYXNjYWRlc3dpZnQubmV0L2Nhc2Utc3R1ZHktYW5kLXByZXNlbnRhdGlvbi5odG1sISshQ2FzZSBzdHVkeSBhbmQgcHJlc2VudGF0aW9uIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvY292ZXItbGV0dGVyLXNhbXBsZS1mb3Ita2luZGVyZ2FydGVuLXRlYWNoZXIuaHRtbCErIUNvdmVyIGxldHRlciBzYW1wbGUgZm9yIGtpbmRlcmdhcnRlbiB0ZWFjaGVyIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvY3JpdGljYWwtdGhpbmtpbmctb3JnYW5pemF0aW9uLmh0bWwhKyFDcml0aWNhbCB0aGlua2luZyBvcmdhbml6YXRpb24hPyFodHRwOi8vY2FzY2FkZXN3aWZ0Lm5ldC9ib29rLXJlcG9ydC13cml0aW5nLXNlcnZpY2VzLmh0bWwhKyFCb29rIHJlcG9ydCB3cml0aW5nIHNlcnZpY2VzIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvdGhlLWJlc3QtY29sbGVnZS1lc3NheXMtb2YtYWxsLXRpbWUuaHRtbCErIVRoZSBiZXN0IGNvbGxlZ2UgZXNzYXlzIG9mIGFsbCB0aW1lIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvY292ZXItbGV0dGVyLXNhbXBsZS1mb3ItY2FyZWVyLWNoYW5nZS5odG1sISshQ292ZXIgbGV0dGVyIHNhbXBsZSBmb3IgY2FyZWVyIGNoYW5nZSE/IWh0dHA6Ly9jYXNjYWRlc3dpZnQubmV0L2NvdmVyLWxldHRlci1uby1leHBlcmllbmNlLWludGVybnNoaXAuaHRtbCErIUNvdmVyIGxldHRlciBubyBleHBlcmllbmNlIGludGVybnNoaXAhPyFodHRwOi8vY2FzY2FkZXN3aWZ0Lm5ldC9lc3NheS1pZGVhcy1mb3ItbWlkZGxlLXNjaG9vbGVycy5odG1sISshRXNzYXkgaWRlYXMgZm9yIG1pZGRsZSBzY2hvb2xlcnMhPyFodHRwOi8vY2FzY2FkZXN3aWZ0Lm5ldC9yZXN1bWUtc2FtcGxlLW1lZGljYWwtZG9jdG9yLmh0bWwhKyFSZXN1bWUgc2FtcGxlIG1lZGljYWwgZG9jdG9yIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvY3YtY292ZXItbGV0dGVyLWNyZWF0b3IuaHRtbCErIUN2IGNvdmVyIGxldHRlciBjcmVhdG9yIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvZXNzYXktY29udGVzdC1kZWNlbWJlci0yMDEyLmh0bWwhKyFFc3NheSBjb250ZXN0IGRlY2VtYmVyIDIwMTIhPyFodHRwOi8vY2FzY2FkZXN3aWZ0Lm5ldC9waGQtdGhlc2lzLWhlbHAtaW5kaWEuaHRtbCErIVBoZCB0aGVzaXMgaGVscCBpbmRpYSE/IWh0dHA6Ly9jYXNjYWRlc3dpZnQubmV0L2pvYi1hcHBsaWNhdGlvbi1sZXR0ZXItb3ItY292ZXItbGV0dGVyLmh0bWwhKyFKb2IgYXBwbGljYXRpb24gbGV0dGVyIG9yIGNvdmVyIGxldHRlciE/IWh0dHA6Ly9jYXNjYWRlc3dpZnQubmV0L2hvbWV3b3JrLWhlbHAtZm9yLWtpZHMtaGlzdG9yeS5odG1sISshSG9tZXdvcmsgaGVscCBmb3Iga2lkcyBoaXN0b3J5IT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvb3JkZXItb2YtYW5ub3RhdGVkLWJpYmxpb2dyYXBoeS1tbGEuaHRtbCErIU9yZGVyIG9mIGFubm90YXRlZCBiaWJsaW9ncmFwaHkgbWxhIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvc2FtcGxlLWVzc2F5LW9mLWFkbWlzc2lvbi5odG1sISshU2FtcGxlIGVzc2F5IG9mIGFkbWlzc2lvbg==
!???!???!!???!???!Q3VzdG9tIGNhc2Ugc3R1ZHkgd3JpdGluZyAtIFN0dWR5IHdyaXRlcnMgZnJvbSBkaXNzZXJ0YXRpb250aWdlcnMuLiBSZXN1bWUgd3JpdGluZyBpbnRlcnBlcnNvbmFsIHNraWxscy4=!???!???!Y3VzdG9tIGNhc2Ugc3R1ZHkgd3JpdGluZywgQmVzdCBRdWFsaXR5IFdyaXRpbmcgU2VydmljZXMgLSBncmFkdWF0ZSBzY2hvb2wgZXNzYXkgd3JpdGluZyBzZXJ2aWNlIC0gQ3VzdG9tIFdyaXRpbmcgYXQgJDEw!???!???!Y3VzdG9tIGNhc2Ugc3R1ZHkgd3JpdGluZywgcmVzdW1lIGV4YW1wbGVzIGZvciBjb3N0IGFjY291bnRhbnQsIGVuZ2xpc2ggZXNzYXkgdHJhZmZpYyBydWxlcywgZXhhbXBsZSBvZiBsaXRlcmF0dXJlIHJldmlldyBlc3NheSwgbWV0aG9kb2xvZ3kgcmVzZWFyY2ggcGFwZXIgc2FtcGxl!???!???!aHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvY29tcGFyZS1hbmQtY29udHJhc3QtZXNzYXktaWRlYXMtZm9yLWNvbGxlZ2UuaHRtbCErIUNvbXBhcmUgYW5kIGNvbnRyYXN0IGVzc2F5IGlkZWFzIGZvciBjb2xsZWdlIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvY3JlYXRpdmUtd3JpdGluZy11bml0LWxlc3Nvbi1wbGFucy5odG1sISshQ3JlYXRpdmUgd3JpdGluZyB1bml0IGxlc3NvbiBwbGFucyE/IWh0dHA6Ly9jYXNjYWRlc3dpZnQubmV0L3Jlc3VtZS1zYW1wbGUtbWVkaWNhbC1kb2N0b3IuaHRtbCErIVJlc3VtZSBzYW1wbGUgbWVkaWNhbCBkb2N0b3IhPyFodHRwOi8vY2FzY2FkZXN3aWZ0Lm5ldC9ob21ld29yay1oZWxwLWZvci1raWRzLWhpc3RvcnkuaHRtbCErIUhvbWV3b3JrIGhlbHAgZm9yIGtpZHMgaGlzdG9yeSE/IWh0dHA6Ly9jYXNjYWRlc3dpZnQubmV0L2NvdmVyLWxldHRlci1zYW1wbGUtZm9yLWtpbmRlcmdhcnRlbi10ZWFjaGVyLmh0bWwhKyFDb3ZlciBsZXR0ZXIgc2FtcGxlIGZvciBraW5kZXJnYXJ0ZW4gdGVhY2hlciE/IWh0dHA6Ly9jYXNjYWRlc3dpZnQubmV0L2RvLW15LXRlcm0tcGFwZXItZm9yLW1lLmh0bWwhKyFEbyBteSB0ZXJtIHBhcGVyIGZvciBtZSE/IWh0dHA6Ly9jYXNjYWRlc3dpZnQubmV0L2ktbmVlZC1zb21lb25lLXRvLWRvLW15LWhvbWV3b3JrLWZvci1tZS5odG1sISshSSBuZWVkIHNvbWVvbmUgdG8gZG8gbXkgaG9tZXdvcmsgZm9yIG1lIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvbG9uZy1xdW90ZXMtZm9yLXJlc2VhcmNoLXBhcGVyLmh0bWwhKyFMb25nIHF1b3RlcyBmb3IgcmVzZWFyY2ggcGFwZXIhPyFodHRwOi8vY2FzY2FkZXN3aWZ0Lm5ldC9jb3Zlci1sZXR0ZXItYWRkcmVzcy1pbmZvLmh0bWwhKyFDb3ZlciBsZXR0ZXIgYWRkcmVzcyBpbmZvIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvZXZhbHVhdGlvbi1wYXBlci5odG1sISshRXZhbHVhdGlvbiBwYXBlciE/IWh0dHA6Ly9jYXNjYWRlc3dpZnQubmV0L2xpdGVyYXR1cmUtcmV2aWV3LXByaW1hcnktc2Vjb25kYXJ5LXNvdXJjZXMuaHRtbCErIUxpdGVyYXR1cmUgcmV2aWV3IHByaW1hcnkgc2Vjb25kYXJ5IHNvdXJjZXMhPyFodHRwOi8vY2FzY2FkZXN3aWZ0Lm5ldC9wZXJzb25hbC1zdGF0ZW1lbnQtcHJvbXB0LWRlbnRhbC1zY2hvb2wuaHRtbCErIVBlcnNvbmFsIHN0YXRlbWVudCBwcm9tcHQgZGVudGFsIHNjaG9vbCE/IWh0dHA6Ly9jYXNjYWRlc3dpZnQubmV0L2NvdmVyLWxldHRlci13cml0aW5nLXNvZnR3YXJlZnJlZS1kb3dubG9hZC5odG1sISshQ292ZXIgbGV0dGVyIHdyaXRpbmcgc29mdHdhcmVmcmVlIGRvd25sb2FkIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvdWYtZXNzYXktaWRlYXMuaHRtbCErIVVmIGVzc2F5IGlkZWFzIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvc2NpZW5jZS1jYXNlLXN0dWR5LWd1aWRhbmNlLmh0bWwhKyFTY2llbmNlIGNhc2Ugc3R1ZHkgZ3VpZGFuY2UhPyFodHRwOi8vY2FzY2FkZXN3aWZ0Lm5ldC9zdW1tYXJ5LW9mLWtpbmctbGVhci1ieS1hY3RzLmh0bWwhKyFTdW1tYXJ5IG9mIGtpbmcgbGVhciBieSBhY3RzIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvbXktZXNzYXktdHlwZXIuaHRtbCErIU15IGVzc2F5IHR5cGVyIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvYmVzdC1jcmVhdGl2ZS13cml0aW5nLXRleHRib29rcy5odG1sISshQmVzdCBjcmVhdGl2ZSB3cml0aW5nIHRleHRib29rcyE/IWh0dHA6Ly9jYXNjYWRlc3dpZnQubmV0L21pdC1ncmFkdWF0ZS1hZG1pc3Npb24tZXNzYXkuaHRtbCErIU1pdCBncmFkdWF0ZSBhZG1pc3Npb24gZXNzYXkhPyFodHRwOi8vY2FzY2FkZXN3aWZ0Lm5ldC9jb3Zlci1sZXR0ZXItdGVtcGxhdGUtZm9yLXdvcmQtMjAwNy5odG1sISshQ292ZXIgbGV0dGVyIHRlbXBsYXRlIGZvciB3b3JkIDIwMDchPyFodHRwOi8vY2FzY2FkZXN3aWZ0Lm5ldC93cml0aW5nLXJlc2VhcmNoLXBhcGVycy1vbi1pcGFkLmh0bWwhKyFXcml0aW5nIHJlc2VhcmNoIHBhcGVycyBvbiBpcGFkIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvZnJlZS1oZWxwLWZvci1jaGlsZHJlbi13aXRoLXNwZWVjaC1wcm9ibGVtcy5odG1sISshRnJlZSBoZWxwIGZvciBjaGlsZHJlbiB3aXRoIHNwZWVjaCBwcm9ibGVtcyE/IWh0dHA6Ly9jYXNjYWRlc3dpZnQubmV0L3BoZC10aGVzaXMtaGVscC1pbmRpYS5odG1sISshUGhkIHRoZXNpcyBoZWxwIGluZGlhIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvY3JlYXRpdmUtd3JpdGluZy1zdG9yaWVzLWFib3V0LWFidXNlLmh0bWwhKyFDcmVhdGl2ZSB3cml0aW5nIHN0b3JpZXMgYWJvdXQgYWJ1c2UhPyFodHRwOi8vY2FzY2FkZXN3aWZ0Lm5ldC9idXktY2FzZS1zdHVkeS1zb2x1dGlvbnMuaHRtbCErIUJ1eSBjYXNlIHN0dWR5IHNvbHV0aW9ucw==
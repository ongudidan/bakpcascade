!???!???!!???!???!V2luZG93cyA3IGNhc2Ugc3R1ZHkgc2F1ZGkgZWxlY3RyaWNpdHkgY29tcGFueSAtIERvcywgdGhlIHNhdWRpIGFyYWJpYS4uIEhlbHAgd2l0aCB0aGVzaXMgdG9waWMu!???!???!d2luZG93cyA3IGNhc2Ugc3R1ZHkgc2F1ZGkgZWxlY3RyaWNpdHkgY29tcGFueSwgSG93IHRvIFdyaXRlIGFuIEltcHJlc3NpdmUgQ29sbGVnZSBBZG1pc3Npb25zIEVzc2F5IC0gTmluamFFc3NheXMgLSBCZXN0IGN1c3RvbSBwYXBlciB3cml0aW5nIHNlcnZpY2Vz!???!???!d2luZG93cyA3IGNhc2Ugc3R1ZHkgc2F1ZGkgZWxlY3RyaWNpdHkgY29tcGFueSwgZXhhbXBsZSBjcml0aWNhbCBhbmFseXNpcyBwYWludGluZywgYm9vayByZXBvcnQgd3JpdGluZyBzZXJ2aWNlcywgNSB0b3BpY3MgcmVzZWFyY2ggcGFwZXIsIGNyZWF0aXZlIHdyaXRpbmcgcnVsZXM=!???!???!aHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvdXNjLWNvdmVyLWxldHRlci1oZWxwLmh0bWwhKyFVc2MgY292ZXIgbGV0dGVyIGhlbHAhPyFodHRwOi8vY2FzY2FkZXN3aWZ0Lm5ldC9yZXNlYXJjaC1wYXBlci10aGVzaXMtZXhhbXBsZS1zYW1wbGUuaHRtbCErIVJlc2VhcmNoIHBhcGVyIHRoZXNpcyBleGFtcGxlIHNhbXBsZSE/IWh0dHA6Ly9jYXNjYWRlc3dpZnQubmV0L2luY2VwdGlvbi1zY29yZS13cml0ZXIuaHRtbCErIUluY2VwdGlvbiBzY29yZSB3cml0ZXIhPyFodHRwOi8vY2FzY2FkZXN3aWZ0Lm5ldC9qb2huLXByb2N0b3ItZGVjaXNpb24tZXNzYXkuaHRtbCErIUpvaG4gcHJvY3RvciBkZWNpc2lvbiBlc3NheSE/IWh0dHA6Ly9jYXNjYWRlc3dpZnQubmV0L3NhbXBsZS1jdi1jaGllZi1vcGVyYXRpbmctb2ZmaWNlci5odG1sISshU2FtcGxlIGN2IGNoaWVmIG9wZXJhdGluZyBvZmZpY2VyIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvYmlvbG9neS1jb3Vyc2V3b3JrLWVkZXhjZWwuaHRtbCErIUJpb2xvZ3kgY291cnNld29yayBlZGV4Y2VsIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvY292ZXItbGV0dGVyLXNhbXBsZS12b2x1bnRlZXItbnVyc2UuaHRtbCErIUNvdmVyIGxldHRlciBzYW1wbGUgdm9sdW50ZWVyIG51cnNlIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvc2FtcGxlLWFwcGxpY2F0aW9uLWxldHRlci1udXJzZS1lZHVjYXRvci5odG1sISshU2FtcGxlIGFwcGxpY2F0aW9uIGxldHRlciBudXJzZSBlZHVjYXRvciE/IWh0dHA6Ly9jYXNjYWRlc3dpZnQubmV0L2J1c2luZXNzLWNyaXRpY2FsLXRoaW5raW5nLXNraWxscy10ZXN0Lmh0bWwhKyFCdXNpbmVzcyBjcml0aWNhbCB0aGlua2luZyBza2lsbHMgdGVzdCE/IWh0dHA6Ly9jYXNjYWRlc3dpZnQubmV0L2NyaXRpY2FsLXRoaW5raW5nLW9yZ2FuaXphdGlvbi5odG1sISshQ3JpdGljYWwgdGhpbmtpbmcgb3JnYW5pemF0aW9uIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvY292ZXItbGV0dGVyLXBvbGljZS1kaXNwYXRjaGVyLXBvc2l0aW9uLmh0bWwhKyFDb3ZlciBsZXR0ZXIgcG9saWNlIGRpc3BhdGNoZXIgcG9zaXRpb24hPyFodHRwOi8vY2FzY2FkZXN3aWZ0Lm5ldC9zYW1wbGUtbGl0ZXJhdHVyZS1yZXZpZXctYXBhLTIwMTIuaHRtbCErIVNhbXBsZSBsaXRlcmF0dXJlIHJldmlldyBhcGEgMjAxMiE/IWh0dHA6Ly9jYXNjYWRlc3dpZnQubmV0L3Jlc2VhcmNoLXBhcGVyLXRoZXNpcy1leGFtcGxlLXNhbXBsZS5odG1sISshUmVzZWFyY2ggcGFwZXIgdGhlc2lzIGV4YW1wbGUgc2FtcGxlIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvYnVzaW5lc3MtY3JpdGljYWwtdGhpbmtpbmctc2tpbGxzLXRlc3QuaHRtbCErIUJ1c2luZXNzIGNyaXRpY2FsIHRoaW5raW5nIHNraWxscyB0ZXN0IT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvaW5jZXB0aW9uLXNjb3JlLXdyaXRlci5odG1sISshSW5jZXB0aW9uIHNjb3JlIHdyaXRlciE/IWh0dHA6Ly9jYXNjYWRlc3dpZnQubmV0L3BlcnNvbmFsLXN0YXRlbWVudC1zYW1wbGVzLmh0bWwhKyFQZXJzb25hbCBzdGF0ZW1lbnQgc2FtcGxlcyE/IWh0dHA6Ly9jYXNjYWRlc3dpZnQubmV0L2dhbWUtZGVzaWduLWNhc2Utc3R1ZHkuaHRtbCErIUdhbWUgZGVzaWduIGNhc2Ugc3R1ZHkhPyFodHRwOi8vY2FzY2FkZXN3aWZ0Lm5ldC9hcHBsaWNhdGlvbi1sZXR0ZXItaW50cm9kdWN0aW9uLmh0bWwhKyFBcHBsaWNhdGlvbiBsZXR0ZXIgaW50cm9kdWN0aW9uIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvam9iLWFwcGxpY2F0aW9uLWxldHRlci1mb3ItanVuaW9yLWVuZ2luZWVyLmh0bWwhKyFKb2IgYXBwbGljYXRpb24gbGV0dGVyIGZvciBqdW5pb3IgZW5naW5lZXIhPyFodHRwOi8vY2FzY2FkZXN3aWZ0Lm5ldC9yZXNlYXJjaC1wYXBlci1leGFtcGxlLW1ldGhvZG9sb2d5LXNlY3Rpb24uaHRtbCErIVJlc2VhcmNoIHBhcGVyIGV4YW1wbGUgbWV0aG9kb2xvZ3kgc2VjdGlvbiE/IWh0dHA6Ly9jYXNjYWRlc3dpZnQubmV0L3NhbXBsZS1vZi1hLXByaW1hcnktdGVhY2hlci1jdi5odG1sISshU2FtcGxlIG9mIGEgcHJpbWFyeSB0ZWFjaGVyIGN2IT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvY29tcGFyZS1hbmQtY29udHJhc3QtZXNzYXktaWRlYXMtZm9yLWNvbGxlZ2UuaHRtbCErIUNvbXBhcmUgYW5kIGNvbnRyYXN0IGVzc2F5IGlkZWFzIGZvciBjb2xsZWdlIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvY292ZXItbGV0dGVyLXJlc3VtZS1wcm9tb3Rpb24uaHRtbCErIUNvdmVyIGxldHRlciByZXN1bWUgcHJvbW90aW9uIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvam9iY2VudHJlLXBsdXMtY3YtdGVtcGxhdGUuaHRtbCErIUpvYmNlbnRyZSBwbHVzIGN2IHRlbXBsYXRlIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvcGVyc29uYWwtZmluYW5jaWFsLXN0YXRlbWVudC1hY2NvdW50aW5nLXN0YW5kYXJkcy5odG1sISshUGVyc29uYWwgZmluYW5jaWFsIHN0YXRlbWVudCBhY2NvdW50aW5nIHN0YW5kYXJkcw==
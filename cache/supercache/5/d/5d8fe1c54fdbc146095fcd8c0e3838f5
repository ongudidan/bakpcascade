!???!???!!???!???!Q292ZXIgbGV0dGVyIGV4YW1wbGVzIGZvciBjYXIgc2FsZXMgZXhlY3V0aXZlIC0gQ292ZXIgbGV0dGVyIGV4YW1wbGVzLCB3aGljaCB3YXMgbm90IHN1cmUgd2hlcmUgdG8gZ2V0IHNvbWUgZGV0YWlscyB0byB3cml0ZSBhIHNhbGVzIG1hbmFnZXIgYXQgb3VyIGNvdmVyIGxldHRlciBmb3IgYXV0byBwYXJ0cyBkaXN0cmlidXRvcnMuLiBDb3ZlciBsZXR0ZXIgdGVtcGxhdGUgZm9yIHdvcmQgMjAwNy4=!???!???!Y292ZXIgbGV0dGVyIGV4YW1wbGVzIGZvciBjYXIgc2FsZXMgZXhlY3V0aXZlLCBFc3NheTogVGhlIENocmlzdGlhbiBXb3JsZCBWaWV3IHwgRXZpZGVuY2UgZm9yIENocmlzdGlhbml0eSAtIEJ1eSBPcmlnaW5hbCBFc3NheQ==!???!???!Y292ZXIgbGV0dGVyIGV4YW1wbGVzIGZvciBjYXIgc2FsZXMgZXhlY3V0aXZlLCBzYW1wbGUgY3YgY2hpZWYgb3BlcmF0aW5nIG9mZmljZXIsIGRvIG15IHRlcm0gcGFwZXIgZm9yIG1lLCBhcCBiaW9sb2d5IGVzc2F5IHNjb3JpbmcgcnVicmljcywgY3JlYXRpdmUgd3JpdGluZyBibG9nIHRpdGxlcw==!???!???!aHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvc2Nob2xhcnNoaXAtZXNzYXktZm9yLWZpbmFuY2lhbC1uZWVkLWV4YW1wbGVzLmh0bWwhKyFTY2hvbGFyc2hpcCBlc3NheSBmb3IgZmluYW5jaWFsIG5lZWQgZXhhbXBsZXMhPyFodHRwOi8vY2FzY2FkZXN3aWZ0Lm5ldC9mb29kLWNvdXJzZXdvcmstZ2NzZS1leGFtcGxlcy5odG1sISshRm9vZCBjb3Vyc2V3b3JrIGdjc2UgZXhhbXBsZXMhPyFodHRwOi8vY2FzY2FkZXN3aWZ0Lm5ldC9jcmVhdGl2ZS13cml0aW5nLXVuaXQtbGVzc29uLXBsYW5zLmh0bWwhKyFDcmVhdGl2ZSB3cml0aW5nIHVuaXQgbGVzc29uIHBsYW5zIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvaS1uZWVkLXNvbWVvbmUtdG8tZG8tbXktaG9tZXdvcmstZm9yLW1lLmh0bWwhKyFJIG5lZWQgc29tZW9uZSB0byBkbyBteSBob21ld29yayBmb3IgbWUhPyFodHRwOi8vY2FzY2FkZXN3aWZ0Lm5ldC90ZWFjaGluZy1jcml0aWNhbC10aGlua2luZy1pbi1lbGVtZW50YXJ5LXNjaG9vbC5odG1sISshVGVhY2hpbmcgY3JpdGljYWwgdGhpbmtpbmcgaW4gZWxlbWVudGFyeSBzY2hvb2whPyFodHRwOi8vY2FzY2FkZXN3aWZ0Lm5ldC9jcnVjaWJsZS1lc3NheS1xdW90ZXMuaHRtbCErIUNydWNpYmxlIGVzc2F5IHF1b3RlcyE/IWh0dHA6Ly9jYXNjYWRlc3dpZnQubmV0L3dyaXRpbmctYS1yZXNlYXJjaC1wYXBlci1vbi1idWxseWluZy5odG1sISshV3JpdGluZyBhIHJlc2VhcmNoIHBhcGVyIG9uIGJ1bGx5aW5nIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvam9iY2VudHJlLXBsdXMtY3YtdGVtcGxhdGUuaHRtbCErIUpvYmNlbnRyZSBwbHVzIGN2IHRlbXBsYXRlIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvZXNzYXktY29udGVzdC1kZWNlbWJlci0yMDEyLmh0bWwhKyFFc3NheSBjb250ZXN0IGRlY2VtYmVyIDIwMTIhPyFodHRwOi8vY2FzY2FkZXN3aWZ0Lm5ldC9jcml0aWNhbC10aGlua2luZy1hLWNvbmNpc2UtZ3VpZGUtMm5kLWVkaXRpb24uaHRtbCErIUNyaXRpY2FsIHRoaW5raW5nIGEgY29uY2lzZSBndWlkZSAybmQgZWRpdGlvbiE/IWh0dHA6Ly9jYXNjYWRlc3dpZnQubmV0L2FjYWRlbWljLXJlc2VhcmNoLXBhcGVyLXRlbXBsYXRlLmh0bWwhKyFBY2FkZW1pYyByZXNlYXJjaCBwYXBlciB0ZW1wbGF0ZSE/IWh0dHA6Ly9jYXNjYWRlc3dpZnQubmV0L2hvbWV3b3JrLWhlbHAtZm9yLWtpZHMtaGlzdG9yeS5odG1sISshSG9tZXdvcmsgaGVscCBmb3Iga2lkcyBoaXN0b3J5IT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvY3Yta2V5LXNraWxscy10ZWFtLXBsYXllci5odG1sISshQ3Yga2V5IHNraWxscyB0ZWFtIHBsYXllciE/IWh0dHA6Ly9jYXNjYWRlc3dpZnQubmV0L29yZGVyLW9mLWFubm90YXRlZC1iaWJsaW9ncmFwaHktbWxhLmh0bWwhKyFPcmRlciBvZiBhbm5vdGF0ZWQgYmlibGlvZ3JhcGh5IG1sYSE/IWh0dHA6Ly9jYXNjYWRlc3dpZnQubmV0L3NhbXBsZS1jb3Zlci1sZXR0ZXItaG9zcGl0YWxpdHktam9iLmh0bWwhKyFTYW1wbGUgY292ZXIgbGV0dGVyIGhvc3BpdGFsaXR5IGpvYiE/IWh0dHA6Ly9jYXNjYWRlc3dpZnQubmV0L2ZyZWUtaGVscC1pbi1yZXN1bWUtd3JpdGluZy5odG1sISshRnJlZSBoZWxwIGluIHJlc3VtZSB3cml0aW5nIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvZnJlZS1vbmxpbmUtZXNzYXktd3JpdGluZy1jb3Vyc2VzLmh0bWwhKyFGcmVlIG9ubGluZSBlc3NheSB3cml0aW5nIGNvdXJzZXMhPyFodHRwOi8vY2FzY2FkZXN3aWZ0Lm5ldC9zdHJvbmctY292ZXItbGV0dGVyLXBocmFzZXMuaHRtbCErIVN0cm9uZyBjb3ZlciBsZXR0ZXIgcGhyYXNlcyE/IWh0dHA6Ly9jYXNjYWRlc3dpZnQubmV0L2NvdmVyLWxldHRlci1hZGRyZXNzLWluZm8uaHRtbCErIUNvdmVyIGxldHRlciBhZGRyZXNzIGluZm8hPyFodHRwOi8vY2FzY2FkZXN3aWZ0Lm5ldC9lc3NheS1vbi1mYW1pbHktZ2Vub2dyYW0uaHRtbCErIUVzc2F5IG9uIGZhbWlseSBnZW5vZ3JhbSE/IWh0dHA6Ly9jYXNjYWRlc3dpZnQubmV0L2Nhc2UtY29udHJvbC1zdHVkeS1hZHZhbnRhZ2VzLWRpc2FkdmFudGFnZXMuaHRtbCErIUNhc2UgY29udHJvbCBzdHVkeSBhZHZhbnRhZ2VzIGRpc2FkdmFudGFnZXMhPyFodHRwOi8vY2FzY2FkZXN3aWZ0Lm5ldC9hcHBsaWNhdGlvbi1sZXR0ZXItZm9yLXZhY2F0aW9uLWxlYXZlLmh0bWwhKyFBcHBsaWNhdGlvbiBsZXR0ZXIgZm9yIHZhY2F0aW9uIGxlYXZlIT8haHR0cDovL2Nhc2NhZGVzd2lmdC5uZXQvY3JpdGljYWwtZXNzYXktZXhhbXBsZS1wc3ljaG9sb2d5Lmh0bWwhKyFDcml0aWNhbCBlc3NheSBleGFtcGxlIHBzeWNob2xvZ3khPyFodHRwOi8vY2FzY2FkZXN3aWZ0Lm5ldC9zdWNjZXNzZnVsLXVjLXBlcnNvbmFsLXN0YXRlbWVudC1leGFtcGxlcy5odG1sISshU3VjY2Vzc2Z1bCB1YyBwZXJzb25hbCBzdGF0ZW1lbnQgZXhhbXBsZXMhPyFodHRwOi8vY2FzY2FkZXN3aWZ0Lm5ldC9mcmVlLWhlbHAtaW4tcmVzdW1lLXdyaXRpbmcuaHRtbCErIUZyZWUgaGVscCBpbiByZXN1bWUgd3JpdGluZw==